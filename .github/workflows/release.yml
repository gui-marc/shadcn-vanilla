name: Release

on:
  push:
    tags:
      - 'v*.*.*'   # semver tags

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.6'

    - name: Install dependencies
      run: go mod tidy

    - name: Build binaries
      run: |
        mkdir -p dist
        GOOS=linux GOARCH=amd64 go build -o dist/shadcn-vanilla ./cli
        GOOS=linux GOARCH=arm64 go build -o dist/shadcn-vanilla-linux-arm64 ./cli
        GOOS=darwin GOARCH=amd64 go build -o dist/shadcn-vanilla-darwin-amd64 ./cli
        GOOS=darwin GOARCH=arm64 go build -o dist/shadcn-vanilla-darwin-arm64 ./cli
        GOOS=windows GOARCH=amd64 go build -o dist/shadcn-vanilla.exe ./cli

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload release assets (linux amd64)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/shadcn-vanilla
        asset_name: shadcn-vanilla-linux-amd64
        asset_content_type: application/octet-stream

    - name: Upload release assets (linux arm64)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/shadcn-vanilla-linux-arm64
        asset_name: shadcn-vanilla-linux-arm64
        asset_content_type: application/octet-stream

    - name: Upload release assets (darwin amd64)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/shadcn-vanilla-darwin-amd64
        asset_name: shadcn-vanilla-darwin-amd64
        asset_content_type: application/octet-stream

    - name: Upload release assets (darwin arm64)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/shadcn-vanilla-darwin-arm64
        asset_name: shadcn-vanilla-darwin-arm64
        asset_content_type: application/octet-stream

    - name: Upload release assets (windows amd64)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/shadcn-vanilla.exe
        asset_name: shadcn-vanilla-windows-amd64.exe
        asset_content_type: application/octet-stream

    # Homebrew formula publishing (assuming a formula template in the repo)
    - name: Setup Git for Homebrew tap
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Clone Homebrew tap repo
      run: |
        git clone https://github.com/gui-marc/homebrew-shadcn-vanilla.git homebrew-tap
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update Homebrew formula
      run: |
        # Generate or update formula file in homebrew-tap/Formula/shadcn-vanilla.rb
        # This is a simple example that should be adapted:
        VERSION=${GITHUB_REF_NAME#v}
        URL=https://github.com/gui-marc/shadcn-vanilla/releases/download/${GITHUB_REF_NAME}/shadcn-vanilla-linux-amd64
        SHA256=$(sha256sum dist/shadcn-vanilla | cut -d ' ' -f1)
        cat > homebrew-tap/Formula/shadcn-vanilla.rb <<EOF
class ShadcnVanilla < Formula
  desc "Shadcn Vanilla CLI"
  homepage "https://github.com/gui-marc/shadcn-vanilla"
  url "${URL}"
  sha256 "${SHA256}"
  version "${VERSION}"
  depends_on "go" => :build

  def install
    bin.install "shadcn-vanilla"
  end

  test do
    system "#{bin}/shadcn-vanilla", "--version"
  end
end
EOF

    - name: Commit and push Homebrew formula update
      run: |
        cd homebrew-tap
        git add Formula/shadcn-vanilla.rb
        git commit -m "Update shadcn-vanilla formula for version ${{ github.ref_name }}"
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
